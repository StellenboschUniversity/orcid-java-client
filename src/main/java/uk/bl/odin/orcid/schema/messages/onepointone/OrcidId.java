//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, vJAXB 2.1.10 in JDK 6 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2014.01.20 at 12:59:45 PM GMT 
//

package uk.bl.odin.orcid.schema.messages.onepointone;

import java.util.ArrayList;
import java.util.List;

import javax.xml.bind.JAXBElement;
import javax.xml.bind.annotation.XmlAccessType;
import javax.xml.bind.annotation.XmlAccessorType;
import javax.xml.bind.annotation.XmlElementRef;
import javax.xml.bind.annotation.XmlElementRefs;
import javax.xml.bind.annotation.XmlType;

/**
 * The identifier of the researcher or contributor in ORCID (the ORCID iD). At
 * least one of uri or path must be given.
 * 
 * 
 * <p>
 * Java class for orcid-id complex type.
 * 
 * <p>
 * The following schema fragment specifies the expected content contained within
 * this class.
 * 
 * <pre>
 * &lt;complexType name="orcid-id">
 *   &lt;complexContent>
 *     &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType">
 *       &lt;sequence>
 *         &lt;choice>
 *           &lt;sequence>
 *             &lt;element name="uri" type="{http://www.orcid.org/ns/orcid}orcid-uri"/>
 *             &lt;element name="path" type="{http://www.orcid.org/ns/orcid}orcid-path" minOccurs="0"/>
 *           &lt;/sequence>
 *           &lt;element name="path" type="{http://www.orcid.org/ns/orcid}orcid-path"/>
 *         &lt;/choice>
 *         &lt;element ref="{http://www.orcid.org/ns/orcid}host" minOccurs="0"/>
 *       &lt;/sequence>
 *     &lt;/restriction>
 *   &lt;/complexContent>
 * &lt;/complexType>
 * </pre>
 * 
 * 
 */
@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(name = "orcid-id", propOrder = { "content" })
public class OrcidId {

	@XmlElementRefs({
			@XmlElementRef(name = "uri", namespace = "http://www.orcid.org/ns/orcid", type = JAXBElement.class),
			@XmlElementRef(name = "host", namespace = "http://www.orcid.org/ns/orcid", type = JAXBElement.class),
			@XmlElementRef(name = "path", namespace = "http://www.orcid.org/ns/orcid", type = JAXBElement.class) })
	protected List<JAXBElement<String>> content;

	/**
	 * Gets the rest of the content model.
	 * 
	 * <p>
	 * You are getting this "catch-all" property because of the following
	 * reason: The field name "Path" is used by two different parts of a schema.
	 * See: line 1406 of file:/private/tmp/orcid/orcid-message-1.1.xsd line 1404
	 * of file:/private/tmp/orcid/orcid-message-1.1.xsd
	 * <p>
	 * To get rid of this property, apply a property customization to one of
	 * both of the following declarations to change their names: Gets the value
	 * of the content property.
	 * 
	 * <p>
	 * This accessor method returns a reference to the live list, not a
	 * snapshot. Therefore any modification you make to the returned list will
	 * be present inside the JAXB object. This is why there is not a
	 * <CODE>set</CODE> method for the content property.
	 * 
	 * <p>
	 * For example, to add a new item, do as follows:
	 * 
	 * <pre>
	 * getContent().add(newItem);
	 * </pre>
	 * 
	 * 
	 * <p>
	 * Objects of the following type(s) are allowed in the list
	 * {@link JAXBElement }{@code <}{@link String }{@code >} {@link JAXBElement }
	 * {@code <}{@link String }{@code >} {@link JAXBElement }{@code <}
	 * {@link String }{@code >}
	 * 
	 * 
	 */
	public List<JAXBElement<String>> getContent() {
		if (content == null) {
			content = new ArrayList<JAXBElement<String>>();
		}
		return this.content;
	}
	
	/** Manually added to bindings.  
	 * @return first found path value
	 */
	public String getPath(){
		for (JAXBElement<String> e :content){
			if (e.getName().getLocalPart().equals("path"))
					return e.getValue().toString();
		}
		return null;
	}
	
	/** Manually added to bindings.  
	 * @return first found uri value
	 */
	public String getUri(){
		for (JAXBElement<String> e :content){
			if (e.getName().getLocalPart().equals("uri"))
					return e.getValue().toString();
		}
		return null;
	}
	
	/** Manually added to bindings.  
	 * @return first found host value
	 */
	public String getHost(){
		for (JAXBElement<String> e :content){
			if (e.getName().getLocalPart().equals("host"))
					return e.getValue().toString();
		}
		return null;
	}

}
